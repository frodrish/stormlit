diff --git a/node_modules/@astrojs/starlight/utils/head.ts b/node_modules/@astrojs/starlight/utils/head.ts
index 58def2e..70cedd4 100644
--- a/node_modules/@astrojs/starlight/utils/head.ts
+++ b/node_modules/@astrojs/starlight/utils/head.ts
@@ -16,7 +16,6 @@ export function getHead(
 	siteTitle: string
 ): HeadConfig {
 	const { data } = entry;
-
 	const canonical = context.site ? new URL(context.url.pathname, context.site) : undefined;
 	const canonicalHref = canonical?.href
 		? formatCanonical(canonical.href, {
@@ -106,7 +105,6 @@ export function getHead(
 			},
 		});
 	}
-
 	return createHead(headDefaults, config.head, data.head);
 }
 
@@ -114,6 +112,7 @@ export function getHead(
 function createHead(defaults: HeadUserConfig, ...heads: HeadConfig[]) {
 	let head = HeadSchema.parse(defaults);
 	for (const next of heads) {
+		if(!next) continue; 
 		head = mergeHead(head, next);
 	}
 	return sortHead(head);
diff --git a/node_modules/@astrojs/starlight/utils/navigation.ts b/node_modules/@astrojs/starlight/utils/navigation.ts
index 5fe09b8..f6901e4 100644
--- a/node_modules/@astrojs/starlight/utils/navigation.ts
+++ b/node_modules/@astrojs/starlight/utils/navigation.ts
@@ -291,7 +291,10 @@ function getOrder(routeOrDir: Route | Dir): number {
 	return isDir(routeOrDir)
 		? Math.min(...Object.values(routeOrDir).flatMap(getOrder))
 		: // If no order value is found, set it to the largest number possible.
-			(routeOrDir.entry.data.sidebar.order ?? Number.MAX_VALUE);
+			(
+				(routeOrDir.entry.data.sidebar === undefined || routeOrDir.entry.data.sidebar.order === undefined)?
+				Number.MAX_VALUE : routeOrDir.entry.data.sidebar.order
+			);
 }
 
 /** Sort a directoryâ€™s entries by user-specified order or alphabetically if no order specified. */
@@ -393,6 +396,9 @@ function getIntermediateSidebarFromConfig(
 	pathname: string,
 	locale: string | undefined
 ): SidebarEntry[] {
+	if(sidebarConfig === undefined) {
+		sidebarConfig = []
+	}
 	const routes = getLocaleRoutes(locale);
 	if (sidebarConfig) {
 		return sidebarConfig.map((group) => configItemToEntry(group, pathname, locale, routes));
diff --git a/node_modules/@astrojs/starlight/utils/routing/index.ts b/node_modules/@astrojs/starlight/utils/routing/index.ts
index 460d15a..a47d49c 100644
--- a/node_modules/@astrojs/starlight/utils/routing/index.ts
+++ b/node_modules/@astrojs/starlight/utils/routing/index.ts
@@ -42,7 +42,7 @@ export function normalizeCollectionEntry(entry: StarlightDocsCollectionEntry): S
 const docs: StarlightDocsEntry[] = (
 	(await getCollection('docs', ({ data }) => {
 		// In production, filter out drafts.
-		return import.meta.env.MODE !== 'production' || data.draft === false;
+		return import.meta.env.MODE !== 'production' || data.draft != true;
 	})) ?? []
 ).map(normalizeCollectionEntry);
 
